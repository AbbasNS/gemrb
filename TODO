Scripts:
1. (DONE) Run All creature scripts when the creatures are 'activated'. 
2. (DONE) Run All area scripts not just the active areas. (now Game runs them all)
3. (DONE) TLK tags
4. (DONE) fix loading/saving of local variables of creatures (needs effect framework)
5. (DONE) Handle the protagonist/party death event
6. (DONE) Handle the party limit exceeded event


Items:
1. (DONE) Loading containers/items in areas
2. (DONE) Dropping of items (first create an opcode)
2a. (DONE) Render dropped items in area (ground icon)
3. (DONE) Picking up an item (create opcode too)
4. (PARTLY) Equipping items, weapons are special
5. (DONE) Equipped weapon range (create triggers)
6. Break items, count charges


Effects:
1. (PARTLY) Create base system for effect blocks (Avenger)
2. (DONE-almost) Implement common effects
3. Implement IWD2 effects
4. (DONE-almost) Implement TOB effects
5. Implement PST effects

Area:
1. (DONE) Implement cover (wallgroups) (wjp)
2. Don't load scripts for pile items? (research when a script is unused)
3. Create real streaming ambients (do not preload them, just use them when needed)
4. (DONE) in pathfinder, calculate with the actor's feet circle size 
5. fix door wallgroups and tiles
6. Improve pathfinder to not cancel pathfinding when the target point
   is temporarily blocked by other actor

Store:
1. (DONE) Save stores, handle containers
2. (DONE) Stores recharge rechargeable items

Animation:
1. (PARTLY) fix char animation sequences
2. (DONE) animationfactory->one single palette
3. (DONE) Use animationfactory in CharAnimations, and allow different palettes
4. (DONE) Handle large multipart animations (2x2, 3x3)
5. (PARTLY) Handle equipment animations (armourlevel, weapons)
6. (DONE) Fix avatars for PST's actors marked with '*' in ANIMATE.IDS
7. stanceID is still fuzzy. Fix it. (FIXED?)


Actor:
1. (DONE) Fix reputation
2. Use the character sheet (Actor.cpp) itself to store attributes of the character 
   during character generation. 
   Benefits: data is already stored in the destination, data constraints and relations 
   are easily implemented.
   How to: replace GemRB.SetVar with GemRB.SetPlayerStat. Don't forget to create
   the character first.


Game GUI:
1. (DONE) fix TextScreen/IncrementChapter
2. (PARTLY) implement class based (but customisable) action button bar. Generally port
   the IWD2 system to all engines
3. implement grabbing mouse pointer by a control to fix dragging of PST Float menu window
4. Fix multi line editboxes. Allow attaching of scrollbar.

General:
1. The Cache and Variables classes could be rewritten to incorporate the release 
   function more smoothly (use templates?)
2. various directories (GemRB override, game override ...) should be resolved 
   right after loading config files and remain static afterwards. Maybe define 
   some PATH variable describing all the directories searched for files
3. employ ccache?
4. valgrind reports a big heap of unreleased python objects


Graphics:
1. use scaling in Video::SpriteScaleDown() instead of in Video::GetPreview() 
   and in BMPImporter
2. move SDLVideoDriver sprite functions to their own file, rename them to 
   SpriteIsPixelTransparent etc.


Sound:
1. valgrind reports invalid memory access due to Unqueueing buffers and using 
   them in another thread (openal weirdness?)
2. sounds get sometimes distorted, might be connected to problem #1
3. make sure GemRB vs. OpenAL still works on both Win32 and Linux


Building:
1. fix include paths during compilation, so the files do not 
   use #include "../../Core/something.h" etc.

Release:
1. Create packages for various distros and get them to distributions. Requires
   maintainers.
2. Get a sample game with some free license which could be distributed
   with GemRB.


Documentation:
1. (DONE) make tool to scan GUIScript.cpp and report functions with stale
   documentation in docs/en/GUIScript
2. (PARTLY) make tool to scan source files for those with non-standard
   copyright notices
3. Add Doxygen doc comments to more objects
4. Write GemRB overview, structure and high-level flow docs


Community:
1. (DONE) fix CIA reporting email address
2. Update the web page, get rid of postnuke
3. Move this todo to bug/task tracker at Sourceforge :-)
