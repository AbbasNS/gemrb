# Makefile.in generated by automake 1.6.3 from Makefile.am.
# gemrb/plugins/Core/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ../../..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = /home/exodus/GemRB/
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = /home/exodus/GemRB/
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = /home/exodus/GemRB/plugins
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/gemrb
pkglibdir = $(libdir)/gemrb
pkgincludedir = $(includedir)/gemrb
top_builddir = ../../..

ACLOCAL = aclocal-1.6
AUTOCONF = autoconf
AUTOMAKE = automake-1.6
AUTOHEADER = autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i686-pc-linux-gnu
host_alias = 
host_triplet = i686-pc-linux-gnu
target_alias = 
target_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = tar
AS = @AS@
AWK = mawk
CC = gcc
CXX = g++
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
ECHO = echo
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
OBJDUMP = @OBJDUMP@
PACKAGE = gemrb
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_INCLUDES = -I/usr/include/python2.3
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.3
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -lSDL -lpthread
STRIP = strip
VERSION = 0.1
am__include = include
am__quote = 
install_sh = /home/exodus/gemrb/gemrbcvs/gemrb/install-sh
pythondir = @pythondir@
lib_LTLIBRARIES = libcore.la
INCLUDES = $(all_includes)
LDFLAGS = 
libcore_la_LDFLAGS = -version-info 0:0:0 -ldl
libcore_la_METASOURCES = AUTO
libcore_la_SOURCES = GameScript.cpp GlobalTimer.cpp PathFinder.cpp Polygon.cpp Game.cpp GameControl.cpp Variables.cpp SaveGameIterator.cpp DataFileMgr.cpp TableMgr.cpp MusicMgr.cpp SoundMgr.cpp Console.cpp ScriptEngine.cpp TextEdit.cpp EventMgr.cpp ScrollBar.cpp TextArea.cpp Slider.cpp Label.cpp WindowMgr.cpp Window.cpp VideoModes.cpp VideoMode.cpp Video.cpp TileSetMgr.cpp TileOverlay.cpp TileMapMgr.cpp TileMap.cpp Tile.cpp SymbolMgr.cpp StringMgr.cpp Sprite2D.cpp ResourceMgr.cpp Region.cpp PluginMgr.cpp Plugin.cpp MoviePlayer.cpp MemoryStream.cpp MapMgr.cpp Map.cpp InterfaceDesc.cpp Interface.cpp ImageMgr.cpp HCAnimationSeq.cpp Font.cpp FileStream.cpp FactoryObject.cpp Factory.cpp DataStream.cpp Core.cpp Control.cpp Compressor.cpp Class_ID.cpp ClassDesc.cpp CharAnimations.cpp CachedFileStream.cpp Button.cpp ArchiveImporter.cpp AnimationMgr.cpp AnimationFactory.cpp Animation.cpp ActorMgr.cpp Actor.cpp 
EXTRA_DIST = Actor.cpp Actor.h ActorMgr.cpp ActorMgr.h Animation.cpp AnimationFactory.cpp AnimationFactory.h Animation.h AnimationMgr.cpp AnimationMgr.h AnimStructures.h ArchiveImporter.cpp ArchiveImporter.h Button.cpp Button.h CachedFileStream.cpp CachedFileStream.h CharAnimations.cpp CharAnimations.h ClassDesc.cpp ClassDesc.h Class_ID.cpp Class_ID.h Compressor.cpp Compressor.h Control.cpp Control.h Core.cpp DataStream.cpp DataStream.h Factory.cpp Factory.h FactoryObject.cpp FactoryObject.h FileStream.cpp FileStream.h Font.cpp Font.h HCAnimationSeq.cpp HCAnimationSeq.h ImageMgr.cpp ImageMgr.h Interface.cpp InterfaceDesc.cpp InterfaceDesc.h Interface.h Map.cpp Map.h MapMgr.cpp MapMgr.h MemoryStream.cpp MemoryStream.h MoviePlayer.cpp MoviePlayer.h Plugin.cpp Plugin.h PluginMgr.cpp PluginMgr.h Region.cpp Region.h ResourceMgr.cpp ResourceMgr.h Sprite2D.cpp Sprite2D.h StringMgr.cpp StringMgr.h SymbolMgr.cpp SymbolMgr.h Tile.cpp Tile.h TileMap.cpp TileMap.h TileMapMgr.cpp TileMapMgr.h TileOverlay.cpp TileOverlay.h TileSetMgr.cpp TileSetMgr.h Video.cpp Video.h VideoMode.cpp VideoMode.h VideoModes.cpp VideoModes.h Window.cpp Window.h WindowMgr.cpp WindowMgr.h Label.cpp Label.h Slider.cpp Slider.h TextArea.cpp TextArea.h ScrollBar.cpp ScrollBar.h EventMgr.cpp EventMgr.h TextEdit.cpp TextEdit.h ScriptEngine.cpp ScriptEngine.h Console.cpp Console.h SoundMgr.cpp SoundMgr.h MusicMgr.cpp MusicMgr.h TableMgr.cpp TableMgr.h DataFileMgr.cpp DataFileMgr.h SaveGameIterator.cpp SaveGameIterator.h Variables.cpp Variables.h GameControl.cpp GameControl.h Game.cpp Game.h Polygon.cpp Polygon.h PathFinder.cpp PathFinder.h GameScript.h
subdir = gemrb/plugins/Core
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libcore_la_LIBADD =
am_libcore_la_OBJECTS = GameScript.lo GlobalTimer.lo PathFinder.lo \
	Polygon.lo Game.lo GameControl.lo Variables.lo \
	SaveGameIterator.lo DataFileMgr.lo TableMgr.lo MusicMgr.lo \
	SoundMgr.lo Console.lo ScriptEngine.lo TextEdit.lo EventMgr.lo \
	ScrollBar.lo TextArea.lo Slider.lo Label.lo WindowMgr.lo \
	Window.lo VideoModes.lo VideoMode.lo Video.lo TileSetMgr.lo \
	TileOverlay.lo TileMapMgr.lo TileMap.lo Tile.lo SymbolMgr.lo \
	StringMgr.lo Sprite2D.lo ResourceMgr.lo Region.lo PluginMgr.lo \
	Plugin.lo MoviePlayer.lo MemoryStream.lo MapMgr.lo Map.lo \
	InterfaceDesc.lo Interface.lo ImageMgr.lo HCAnimationSeq.lo \
	Font.lo FileStream.lo FactoryObject.lo Factory.lo DataStream.lo \
	Core.lo Control.lo Compressor.lo Class_ID.lo ClassDesc.lo \
	CharAnimations.lo CachedFileStream.lo Button.lo \
	ArchiveImporter.lo AnimationMgr.lo AnimationFactory.lo \
	Animation.lo ActorMgr.lo Actor.lo
libcore_la_OBJECTS = $(am_libcore_la_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS =  -I/usr/include
LIBS = -lopenal -lz 
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/Actor.Plo ./$(DEPDIR)/ActorMgr.Plo \
	./$(DEPDIR)/Animation.Plo \
	./$(DEPDIR)/AnimationFactory.Plo \
	./$(DEPDIR)/AnimationMgr.Plo \
	./$(DEPDIR)/ArchiveImporter.Plo \
	./$(DEPDIR)/Button.Plo \
	./$(DEPDIR)/CachedFileStream.Plo \
	./$(DEPDIR)/CharAnimations.Plo \
	./$(DEPDIR)/ClassDesc.Plo ./$(DEPDIR)/Class_ID.Plo \
	./$(DEPDIR)/Compressor.Plo ./$(DEPDIR)/Console.Plo \
	./$(DEPDIR)/Control.Plo ./$(DEPDIR)/Core.Plo \
	./$(DEPDIR)/DataFileMgr.Plo \
	./$(DEPDIR)/DataStream.Plo ./$(DEPDIR)/EventMgr.Plo \
	./$(DEPDIR)/Factory.Plo \
	./$(DEPDIR)/FactoryObject.Plo \
	./$(DEPDIR)/FileStream.Plo ./$(DEPDIR)/Font.Plo \
	./$(DEPDIR)/Game.Plo ./$(DEPDIR)/GameControl.Plo \
	./$(DEPDIR)/GameScript.Plo \
	./$(DEPDIR)/GlobalTimer.Plo \
	./$(DEPDIR)/HCAnimationSeq.Plo \
	./$(DEPDIR)/ImageMgr.Plo ./$(DEPDIR)/Interface.Plo \
	./$(DEPDIR)/InterfaceDesc.Plo ./$(DEPDIR)/Label.Plo \
	./$(DEPDIR)/Map.Plo ./$(DEPDIR)/MapMgr.Plo \
	./$(DEPDIR)/MemoryStream.Plo \
	./$(DEPDIR)/MoviePlayer.Plo \
	./$(DEPDIR)/MusicMgr.Plo ./$(DEPDIR)/PathFinder.Plo \
	./$(DEPDIR)/Plugin.Plo ./$(DEPDIR)/PluginMgr.Plo \
	./$(DEPDIR)/Polygon.Plo ./$(DEPDIR)/Region.Plo \
	./$(DEPDIR)/ResourceMgr.Plo \
	./$(DEPDIR)/SaveGameIterator.Plo \
	./$(DEPDIR)/ScriptEngine.Plo \
	./$(DEPDIR)/ScrollBar.Plo ./$(DEPDIR)/Slider.Plo \
	./$(DEPDIR)/SoundMgr.Plo ./$(DEPDIR)/Sprite2D.Plo \
	./$(DEPDIR)/StringMgr.Plo ./$(DEPDIR)/SymbolMgr.Plo \
	./$(DEPDIR)/TableMgr.Plo ./$(DEPDIR)/TextArea.Plo \
	./$(DEPDIR)/TextEdit.Plo ./$(DEPDIR)/Tile.Plo \
	./$(DEPDIR)/TileMap.Plo ./$(DEPDIR)/TileMapMgr.Plo \
	./$(DEPDIR)/TileOverlay.Plo \
	./$(DEPDIR)/TileSetMgr.Plo \
	./$(DEPDIR)/Variables.Plo ./$(DEPDIR)/Video.Plo \
	./$(DEPDIR)/VideoMode.Plo \
	./$(DEPDIR)/VideoModes.Plo ./$(DEPDIR)/Window.Plo \
	./$(DEPDIR)/WindowMgr.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -g -O2 -I/usr/include/SDL -D_REENTRANT
DIST_SOURCES = $(libcore_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libcore_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gemrb/plugins/Core/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcore.la: $(libcore_la_OBJECTS) $(libcore_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libcore_la_LDFLAGS) $(libcore_la_OBJECTS) $(libcore_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Actor.Plo
include ./$(DEPDIR)/ActorMgr.Plo
include ./$(DEPDIR)/Animation.Plo
include ./$(DEPDIR)/AnimationFactory.Plo
include ./$(DEPDIR)/AnimationMgr.Plo
include ./$(DEPDIR)/ArchiveImporter.Plo
include ./$(DEPDIR)/Button.Plo
include ./$(DEPDIR)/CachedFileStream.Plo
include ./$(DEPDIR)/CharAnimations.Plo
include ./$(DEPDIR)/ClassDesc.Plo
include ./$(DEPDIR)/Class_ID.Plo
include ./$(DEPDIR)/Compressor.Plo
include ./$(DEPDIR)/Console.Plo
include ./$(DEPDIR)/Control.Plo
include ./$(DEPDIR)/Core.Plo
include ./$(DEPDIR)/DataFileMgr.Plo
include ./$(DEPDIR)/DataStream.Plo
include ./$(DEPDIR)/EventMgr.Plo
include ./$(DEPDIR)/Factory.Plo
include ./$(DEPDIR)/FactoryObject.Plo
include ./$(DEPDIR)/FileStream.Plo
include ./$(DEPDIR)/Font.Plo
include ./$(DEPDIR)/Game.Plo
include ./$(DEPDIR)/GameControl.Plo
include ./$(DEPDIR)/GameScript.Plo
include ./$(DEPDIR)/GlobalTimer.Plo
include ./$(DEPDIR)/HCAnimationSeq.Plo
include ./$(DEPDIR)/ImageMgr.Plo
include ./$(DEPDIR)/Interface.Plo
include ./$(DEPDIR)/InterfaceDesc.Plo
include ./$(DEPDIR)/Label.Plo
include ./$(DEPDIR)/Map.Plo
include ./$(DEPDIR)/MapMgr.Plo
include ./$(DEPDIR)/MemoryStream.Plo
include ./$(DEPDIR)/MoviePlayer.Plo
include ./$(DEPDIR)/MusicMgr.Plo
include ./$(DEPDIR)/PathFinder.Plo
include ./$(DEPDIR)/Plugin.Plo
include ./$(DEPDIR)/PluginMgr.Plo
include ./$(DEPDIR)/Polygon.Plo
include ./$(DEPDIR)/Region.Plo
include ./$(DEPDIR)/ResourceMgr.Plo
include ./$(DEPDIR)/SaveGameIterator.Plo
include ./$(DEPDIR)/ScriptEngine.Plo
include ./$(DEPDIR)/ScrollBar.Plo
include ./$(DEPDIR)/Slider.Plo
include ./$(DEPDIR)/SoundMgr.Plo
include ./$(DEPDIR)/Sprite2D.Plo
include ./$(DEPDIR)/StringMgr.Plo
include ./$(DEPDIR)/SymbolMgr.Plo
include ./$(DEPDIR)/TableMgr.Plo
include ./$(DEPDIR)/TextArea.Plo
include ./$(DEPDIR)/TextEdit.Plo
include ./$(DEPDIR)/Tile.Plo
include ./$(DEPDIR)/TileMap.Plo
include ./$(DEPDIR)/TileMapMgr.Plo
include ./$(DEPDIR)/TileOverlay.Plo
include ./$(DEPDIR)/TileSetMgr.Plo
include ./$(DEPDIR)/Variables.Plo
include ./$(DEPDIR)/Video.Plo
include ./$(DEPDIR)/VideoMode.Plo
include ./$(DEPDIR)/VideoModes.Plo
include ./$(DEPDIR)/Window.Plo
include ./$(DEPDIR)/WindowMgr.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
